[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Lucas Longour Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lucas Longour. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Longour L (2022). leaflet.polygonstyler: Leafler.polygonstyler. R package version 0.0.0.9000.","code":"@Manual{,   title = {leaflet.polygonstyler: Leafler.polygonstyler},   author = {Lucas Longour},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"leafletpolygonstyler","dir":"","previous_headings":"","what":"Leafler.polygonstyler","title":"Leafler.polygonstyler","text":"goal leaflet.polygonstyler …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Leafler.polygonstyler","text":"can install development version leaflet.polygonstyler like :","code":"# install.packages(\"remotes\") remotes::install_git(\"https://forge.ird.fr/espace-dev/personnels/longour/leaflet.polygonstyler\")"},{"path":"/reference/leaflet.polygonstyler-package.html","id":null,"dir":"Reference","previous_headings":"","what":"leaflet.polygonstyler: Leafler.polygonstyler — leaflet.polygonstyler-package","title":"leaflet.polygonstyler: Leafler.polygonstyler — leaflet.polygonstyler-package","text":"change color polygon without reload geometries.","code":""},{"path":"/reference/leaflet.polygonstyler-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"leaflet.polygonstyler: Leafler.polygonstyler — leaflet.polygonstyler-package","text":"Maintainer: Lucas Longour lucas.longour@ird.fr","code":""},{"path":"/reference/setLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"setLabel — setLabel","title":"setLabel — setLabel","text":"Allow use setShapeLabel function shiny app","code":""},{"path":"/reference/setLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setLabel — setLabel","text":"","code":"setLabel()"},{"path":"/reference/setLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setLabel — setLabel","text":"leaflet map object","code":""},{"path":"/reference/setShapeLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"setShapeLabel — setShapeLabel","title":"setShapeLabel — setShapeLabel","text":"setShapeLabel","code":""},{"path":"/reference/setShapeLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setShapeLabel — setShapeLabel","text":"","code":"setShapeLabel(   map,   data = getMapData(map),   layerId,   label = NULL,   options = NULL )"},{"path":"/reference/setShapeLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setShapeLabel — setShapeLabel","text":"map map object data data layerId layerId label label options options","code":""},{"path":"/reference/setShapeLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setShapeLabel — setShapeLabel","text":"leaflet map object","code":""},{"path":"/reference/setShapeStyle.html","id":null,"dir":"Reference","previous_headings":"","what":"setShapeStyle — setShapeStyle","title":"setShapeStyle — setShapeStyle","text":"setShapeStyle","code":""},{"path":"/reference/setShapeStyle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setShapeStyle — setShapeStyle","text":"","code":"setShapeStyle(   map,   data = getMapData(map),   layerId,   stroke = NULL,   color = NULL,   weight = NULL,   opacity = NULL,   fill = NULL,   fillColor = NULL,   fillOpacity = NULL,   dashArray = NULL,   smoothFactor = NULL,   noClip = NULL,   options = NULL,   label = NULL )"},{"path":"/reference/setShapeStyle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setShapeStyle — setShapeStyle","text":"map map object data data layerId layerId stroke stroke color color weight weight opacity opacity fill fill fillColor fill color fillOpacity fill opacity dashArray dash array smoothFactor smooth factor noClip clip options options label label","code":""},{"path":"/reference/setStyle.html","id":null,"dir":"Reference","previous_headings":"","what":"setStyle — setStyle","title":"setStyle — setStyle","text":"Allow use setShapeStyle function shiny app","code":""},{"path":"/reference/setStyle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setStyle — setStyle","text":"","code":"setStyle()"}]
